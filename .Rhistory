knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggmap)
install.packages('ggmap')
attach(detDat)
detDat <- read.csv("~/data/RMS_Crime_Incidents.csv")
attach(detDat)
max(latitude)
detach(detDat)
attach(detDat)
max_x <- max(longitute)
attach(detDat)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
detach(detDat)
detach(detDat)
detach(detDat)
attach(detDat)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
detach(detDat)
attach(detDat)
coords.data <- c(longitude, latitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
map_bounds <- c(left = min_x, bottom = min_y, right = max_x, top = max_y)
coords.map <- get_stamenmap(map_bounds, zoom = 7, maptype = "toner-lite")
attach(detDat)
coords.data <- c(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
map_bounds <- c(left = min_x, bottom = min_y, right = max_x, top = max_y)
coords.map <- get_stamenmap(map_bounds, zoom = 7, maptype = "toner-lite")
attach(detDat)
coords.data <- c(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
map_bounds <- c(left = min_x, bottom = min_y, right = max_x, top = max_y)
coords.map <- get_map(map_bounds, zoom = 7, maptype = "toner-lite")
attach(detDat)
coords.data <- c(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
map_bounds <- c(left = min_x, bottom = min_y, right = max_x, top = max_y)
coords.map <- get_stamenmap(map_bounds, zoom = 7, maptype = "toner-lite")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggmap)
library(RColorBrewer)
attach(detDat)
coords.data <- c(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
map_bounds <- c(left = min_x, bottom = min_y, right = max_x, top = max_y)
coords.map <- get_stamenmap(map_bounds, zoom = 7, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=Longitude, y=Latitude, fill=..level.., alpha=..level..), geom="polygon")
attach(detDat)
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
map_bounds <- c(left = min_x, bottom = min_y, right = max_x, top = max_y)
coords.map <- get_stamenmap(map_bounds, zoom = 7, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=Longitude, y=Latitude, fill=..level.., alpha=..level..), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
detach(detDat)
attach(detDat)
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
map_bounds <- c(left = min_x, bottom = min_y, right = max_x, top = max_y)
coords.map <- get_stamenmap(map_bounds, zoom = 7, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=Longitude, y=Latitude, fill=..level.., alpha=..level..), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename="./coords.png")
attach(detDat)
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
map_bounds <- c(left = min_x, bottom = min_y, right = max_x, top = max_y)
coords.map <- get_stamenmap(map_bounds, zoom = 7, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=..level..), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename="./coords.png")
detach(detDat)
attach(detDat)
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
map_bounds <- c(left = min_x, bottom = min_y, right = max_x, top = max_y)
coords.map <- get_stamenmap(map_bounds, zoom = 4, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=..level..), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename="./coords.png")
detach(detDat)
attach(detDat)
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
map_bounds <- c(left = min_x, bottom = min_y, right = max_x, top = max_y)
coords.map <- get_stamenmap(map_bounds, zoom = 11, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=..level..), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename="./coords.png")
detach(detDat)
max_x
min_x
attach(detDat)
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
offset <- .1
map_bounds <- c(left = min_x + offset, bottom = min_y + offset, right = max_x - offset, top = max_y - offset)
coords.map <- get_stamenmap(map_bounds, zoom = 18, maptype = "toner-lite")
attach(detDat)
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
offset <- .1
map_bounds <- c(left = min_x + offset, bottom = min_y + offset, right = max_x - offset, top = max_y - offset)
coords.map <- get_stamenmap(map_bounds, zoom = 12, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=..level..), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename="./coords.png")
attach(detDat)
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
offset <- .01
map_bounds <- c(left = min_x + offset, bottom = min_y + offset, right = max_x - offset, top = max_y - offset)
coords.map <- get_stamenmap(map_bounds, zoom = 12, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=..level..), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename="./coords.png")
detach(detDat)
attach(detDat)
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
offset <- .01
map_bounds <- c(left = min_x + offset + .01, bottom = min_y + offset + offset, right = max_x - offset - .01, top = max_y - offset - .01)
coords.map <- get_stamenmap(map_bounds, zoom = 12, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=..level..), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename="./crime_heatmap_01.png")
detach(detDat)
attach(detDat)
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
offset <- .03
map_bounds <- c(left = min_x + offset + .01, bottom = min_y + offset + offset, right = max_x - offset - .01, top = max_y - offset - .01)
coords.map <- get_stamenmap(map_bounds, zoom = 13, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=..level..), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename="./crime_heatmap_03.png")
detach(detDat)
attach(detDat)
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
offset <- .05
map_bounds <- c(left = min_x + offset + .01, bottom = min_y + offset, right = max_x - offset - .01, top = max_y - offset - .01)
coords.map <- get_stamenmap(map_bounds, zoom = 13, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=..level..), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename="./crime_heatmap_03.png")
detach(detDat)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggmap)
library(RColorBrewer)
detDat <- read.csv("~/data/RMS_Crime_Incidents.csv")
# I want to try and constrain the data itself before I put it into the map making
# functions so that I can see if that gives me a more detailed fill
# or perhaps there just isn't enough? but then each would be red idk I think I can get it
attach(detDat)
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
offset <- .05
map_bounds <- c(left = min_x + offset + .01, bottom = min_y + offset, right = max_x - offset - .01, top = max_y - offset - .01)
coords.map <- get_stamenmap(map_bounds, zoom = 14, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=.5), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename="./crime_heatmap_03.png")
detach(detDat)
# I want to try and constrain the data itself before I put it into the map making
# functions so that I can see if that gives me a more detailed fill
# or perhaps there just isn't enough? but then each would be red idk I think I can get it
attach(detDat)
alpha_seq <- sequence(0, 1, by=.1)
make_map <- function(alph_lev) {
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
offset <- .05
map_bounds <- c(left = min_x + offset + .01, bottom = min_y + offset, right = max_x - offset - .01, top = max_y - offset - .01)
coords.map <- get_stamenmap(map_bounds, zoom = 14, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=alph_lev), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename="./crime_heatmap_al_.png" + alph_lev + ".png")
}
for (x in alpha_seq) {
make_map(x)
}
detach(detDat)
alpha_seq
# I want to try and constrain the data itself before I put it into the map making
# functions so that I can see if that gives me a more detailed fill
# or perhaps there just isn't enough? but then each would be red idk I think I can get it
attach(detDat)
alpha_seq <- c(sequence(0, 1, by=.1))
make_map <- function(alph_lev) {
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
offset <- .05
map_bounds <- c(left = min_x + offset + .01, bottom = min_y + offset, right = max_x - offset - .01, top = max_y - offset - .01)
coords.map <- get_stamenmap(map_bounds, zoom = 14, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=alph_lev), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename="./crime_heatmap_al_.png" + alph_lev + ".png")
}
for (x in alpha_seq) {
make_map(x)
}
detach(detDat)
alpha_seq
alpha_seq <- c(sequence(0, 1, by=.1))
alpha_seq
# I want to try and constrain the data itself before I put it into the map making
# functions so that I can see if that gives me a more detailed fill
# or perhaps there just isn't enough? but then each would be red idk I think I can get it
attach(detDat)
make_map <- function(alph_lev) {
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
offset <- .05
map_bounds <- c(left = min_x + offset + .01, bottom = min_y + offset, right = max_x - offset - .01, top = max_y - offset - .01)
coords.map <- get_stamenmap(map_bounds, zoom = 14, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=alph_lev), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename="./crime_heatmap_al_.png" + alph_lev + ".png")
}
for (x in sequence(0, 1, by=.1)) {
make_map(x)
}
detach(detDat)
# I want to try and constrain the data itself before I put it into the map making
# functions so that I can see if that gives me a more detailed fill
# or perhaps there just isn't enough? but then each would be red idk I think I can get it
attach(detDat)
alpha_seq <- c(seq(0, 1, by=.1))
make_map <- function(alph_lev) {
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
offset <- .05
map_bounds <- c(left = min_x + offset + .01, bottom = min_y + offset, right = max_x - offset - .01, top = max_y - offset - .01)
coords.map <- get_stamenmap(map_bounds, zoom = 14, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=alph_lev), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename="./crime_heatmap_al_.png" + alph_lev + ".png")
}
for (x in alpha_seq) {
make_map(x)
}
# I want to try and constrain the data itself before I put it into the map making
# functions so that I can see if that gives me a more detailed fill
# or perhaps there just isn't enough? but then each would be red idk I think I can get it
attach(detDat)
alpha_seq <- c(seq(0, 1, by=.1))
make_map <- function(alph_lev) {
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
offset <- .05
map_bounds <- c(left = min_x + offset + .01, bottom = min_y + offset, right = max_x - offset - .01, top = max_y - offset - .01)
coords.map <- get_stamenmap(map_bounds, zoom = 12, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=alph_lev), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename="./crime_heatmap_al_.png" + toString(alph_lev) + ".png")
}
for (x in alpha_seq) {
make_map(x)
}
# I want to try and constrain the data itself before I put it into the map making
# functions so that I can see if that gives me a more detailed fill
# or perhaps there just isn't enough? but then each would be red idk I think I can get it
attach(detDat)
alpha_seq <- c(seq(0, 1, by=.1))
make_map <- function(alph_lev) {
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
offset <- .05
map_bounds <- c(left = min_x + offset + .01, bottom = min_y + offset, right = max_x - offset - .01, top = max_y - offset - .01)
coords.map <- get_stamenmap(map_bounds, zoom = 12, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=alph_lev), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename= paste("./crime_heatmap_al_.png",alph_lev,".png"))
}
for (x in alpha_seq) {
make_map(x)
}
detach(detDat)
# I want to try and constrain the data itself before I put it into the map making
# functions so that I can see if that gives me a more detailed fill
# or perhaps there just isn't enough? but then each would be red idk I think I can get it
attach(detDat)
alpha_seq <- c(seq(0, 10, by=1))
make_map <- function(alph_lev) {
coords.data <- data.frame(latitude, longitude)
max_x <- max(longitude)
min_x <- min(longitude)
max_y <- max(latitude)
min_y <- min(latitude)
offset <- .05
map_bounds <- c(left = min_x + offset + .01, bottom = min_y + offset, right = max_x - offset - .01, top = max_y - offset - .01)
coords.map <- get_stamenmap(map_bounds, zoom = 11, maptype = "toner-lite")
coords.map <- ggmap(coords.map, extent="device", legend="none")
coords.map <- coords.map + stat_density2d(data=coords.data,  aes(x=longitude, y=latitude, fill=..level.., alpha=alph_lev), geom="polygon")
coords.map <- coords.map +   scale_fill_gradientn(colours=rev(brewer.pal(7, "Spectral")))
coords.map <- coords.map + theme_bw()
ggsave(filename= paste("./crime_heatmap_al_.png",alph_lev,".png"))
}
for (x in alpha_seq) {
make_map(x)
}
detach(detDat)
